version: '3.8'

services:
  # MongoDB Service (for local development/testing)
  mongodb:
    image: mongo:6.0
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-root}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-example}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE:-eyes_app}
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh -u root -p example --quiet || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Backend Service (Node.js)
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: backend
    environment:
      - NODE_ENV=production
      - MONGODB_URI=${MONGODB_URI:-mongodb://root:example@mongodb:27017/eyes_app?authSource=admin}
      - JWT_SECRET=${JWT_SECRET:-your_jwt_secret_key}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-90d}
      - JWT_COOKIE_EXPIRES_IN=${JWT_COOKIE_EXPIRES_IN:-90}
      - PORT=${PORT:-5000}
    ports:
      - "${BACKEND_PORT:-5001}:5000"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pgrep", "node"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Frontend Service (React)
  frontend:
    build:
      context: ./react-codebase/eyes
      dockerfile: Dockerfile
    container_name: frontend
    environment:
      - BACKEND_URL=${BACKEND_URL:-http://backend:5000}
    ports:
      - "${FRONTEND_PORT:-80}:80"
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped

# Volumes
volumes:
  mongodb_data:

# Networks
networks:
  app-network:
    driver: bridge 